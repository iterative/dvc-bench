name: build
on:
  pull_request: {}
  push:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *'

  workflow_dispatch:
    inputs:
      dataset:
        description: "Dataset Size"
        required: false
        default: "small"
        type: choice
        options:
          - tiny
          - small
          - large
          - mnist

env:
  DVC_TEST: "true"
  FORCE_COLOR: "1"
  DATASET: ${{ github.event.inputs.dataset || ( github.event_name == 'schedule' && 'mnist' || 'small' ) }}

permissions:
  contents: read

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
            python-version: "3.10"
      - name: install requirements
        run: |
          pip install -U pip
          pip install wheel
          pip install -r requirements.txt
      - name: check project styling
        run: pre-commit run --all-files --show-diff-on-failure
  gen:
    runs-on: ubuntu-latest
    outputs:
      tests: ${{ steps.tests.outputs.tests }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
            python-version: "3.10"
      - name: install reqs
        run: |
          pip install -U pip
          pip install -r requirements.txt
          pip install "dvc[testing] @ git+https://github.com/iterative/dvc"
      - id: tests
        run: echo "tests=$(./scripts/ci/list_tests.sh)" >> $GITHUB_OUTPUT
  build:
    needs: [gen]
    timeout-minutes: 180
    name: run ${{ matrix.test.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        test: ${{fromJson(needs.gen.outputs.tests)}}
    steps:
      - uses: actions/setup-python@v4
        with:
            python-version: "3.10"
      - uses: actions/checkout@v3
      - name: install requirements
        run: |
            pip install -r requirements.txt
            pip install "dvc[testing] @ git+https://github.com/iterative/dvc"
      - name: run benchmarks
        shell: bash
        env:
          DVC_BENCH_AZURE_CONN_STR: ${{ secrets.DVC_BENCH_AZURE_CONN_STR }}
        run: pytest --benchmark-save ${{ matrix.test.name }} --benchmark-group-by func --dvc-revs main,2.45.0,2.41.1,2.40.0,2.39.0,2.18.1,2.11.0 --pyargs ${{ matrix.test.path }} --size ${DATASET}
      - name: upload raw results
        uses: actions/upload-artifact@v3
        with:
          name: .benchmarks
          path: .benchmarks

  gen_s3:
    runs-on: ubuntu-latest
    outputs:
      tests: ${{ steps.tests.outputs.tests }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
            python-version: "3.10"
      - name: install reqs
        run: |
          pip install -U pip
          pip install -r requirements.txt
          pip install "dvc[testing] @ git+https://github.com/iterative/dvc"
          pip install "dvc_s3[tests] @ git+https://github.com/iterative/dvc-s3"
      - id: tests
        run: echo "tests=$(./scripts/ci/list_tests_s3.sh)" >> $GITHUB_OUTPUT

  build_s3:
    needs: [gen_s3]
    strategy:
      fail-fast: false
      matrix:
          test: ${{fromJson(needs.gen_s3.outputs.tests)}}
    runs-on: ubuntu-latest
    name: run ${{ matrix.test.name }}
    timeout-minutes: 480
    permissions:
      id-token: write
    steps:
      - name: configure AWS credentials
        if: ${{ github.event_name == 'schedule' }}
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::342840881361:role/dvc-bench-gha
          role-duration-seconds: 28800
          aws-region: us-east-1
      - uses: actions/setup-python@v4
        with:
            python-version: "3.10"
      - uses: actions/checkout@v3
      - name: install requirements
        run: |
            pip install -r requirements.txt
            pip install "dvc[testing] @ git+https://github.com/iterative/dvc"
            pip install "dvc-s3[tests] @ git+https://github.com/iterative/dvc-s3"
      - name: configure real S3 DVC env
        if: ${{ github.event_name == 'schedule' }}
        run: |
          echo "DVC_TEST_AWS_REPO_BUCKET=dvc-bench-ci" >> "$GITHUB_ENV"
      - name: run benchmarks
        shell: bash
        # NOTE: 2.6.3 is not benchmarked for S3, real-S3 fixtures are incompatible with old aiobotocore version
        run: pytest --benchmark-save ${{ matrix.test.name}} --benchmark-group-by func --dvc-revs main,2.45.0,2.41.1,2.40.0,2.39.0,2.18.1,2.11.0 --dvc-install-deps s3 --pyargs ${{ matrix.test.path }} dvc_s3.tests.benchmarks --size ${DATASET}
      - name: upload raw results
        uses: actions/upload-artifact@v3
        with:
          name: .benchmarks
          path: .benchmarks

  publish:
    name: join results and publish
    needs: [build, build_s3]
    runs-on: ubuntu-latest
    permissions:
      pages: write
      pull-requests: write
      contents: write
      id-token: write
    steps:
      - uses: iterative/setup-cml@v1
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - uses: actions/checkout@v3
      - name: install requirements
        run: |
          pip install -U pip
          pip install -r requirements.txt
          pip install "dvc[testing] @ git+https://github.com/iterative/dvc"
      - name: download ubuntu results
        uses: actions/download-artifact@v3

      - name: compare results
        shell: bash
        run: ./scripts/ci/gen_html.sh

      - name: post comment
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ github.event_name == 'pull_request' && ! github.event.pull_request.head.repo.fork }}
        run: |
          cml comment update --watermark-title='dvc-bench report' report.md

      - name: deploy new benchmarks to github pages
        if: ${{ github.event_name == 'schedule' }}
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: html
