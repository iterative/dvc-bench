name: build
on:
  pull_request: {}
  push:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *'

env:
  DVC_TEST: "true"

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
            python-version: 3.7
      - name: install requirements
        run: |
          pip install -U pip
          pip install wheel
          pip install -r requirements.txt
      - name: check project styling
        run: pre-commit run --all-files
  gen:
    runs-on: ubuntu-latest
    outputs:
      tests: ${{ steps.tests.outputs.tests }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
            python-version: 3.7
      - name: install reqs
        run: pip install -r requirements.txt
      - id: tests
        run: echo "::set-output name=tests::$(./scripts/ci/list_tests.sh)"
  build:
    needs: [gen]
    timeout-minutes: 60
    name: run ${{ matrix.test.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
#        os: [windows-2019, macos-10.15, ubuntu-18.04]
        os: [ubuntu-18.04]
        test: ${{fromJson(needs.gen.outputs.tests)}}
    steps:
      - uses: actions/setup-python@v2
        with:
            python-version: 3.7
      - uses: actions/checkout@v2
      - name: install requirements
        run: |
            pip install -r requirements.txt
            pip install git+https://github.com/iterative/dvc
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      - name: run benchmarks
        shell: bash
        env:
          DVC_BENCH_AZURE_CONN_STR: ${{ secrets.DVC_BENCH_AZURE_CONN_STR }}
        run: |
          ./run.sh ${{ matrix.test.path }} --size large
      - name: upload raw results
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.test.name }}
          path: .benchmarks
  publish:
    name: join results and publish
    needs: build
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - uses: actions/checkout@v2
      - name: install requirements
        run: pip install -r requirements.txt
      - name: download ubuntu results
        uses: actions/download-artifact@v2
        with:
          path: /tmp/benchmarks
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      - name: join results
        shell: bash
        run: |
          tree /tmp/benchmarks
          mkdir results
          for el in $(find /tmp/benchmarks -type f); do # cleanup tree for easier reading of report
            artifact_name=$(basename $(dirname $(dirname $el)))
            mkdir -p results/$artifact_name
            mv $el results/${artifact_name}/
          done
          mkdir html
          echo "$(date)" > raw
          PY_COLORS=1 py.test-benchmark compare $(find results/ -type f) --histogram histograms --group-by name --csv results.csv --sort name >> raw
          cat raw | ansi2html -W > html/index.html
      - name: create md
        if: github.event_name == 'pull_request'
        id: get-comment-body
        run: |
          cat raw
          body="\`\`\`\n$(cat raw | sed -r "s/\x1B\[([0-9]{1,3}(;[0-9]{1,2})?)?[mGK]//g")\n\`\`\`"
          body="${body//'%'/'%25'}"
          body="${body//$'\n'/'%0A'}"
          body="${body//$'\r'/'%0D'}"
          echo ::set-output name=body::$body
      - name: post comment
        if: github.event_name == 'pull_request'
        uses: peter-evans/create-or-update-comment@v1
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: ${{ steps.get-comment-body.outputs.body }}
      - name: deploy new benchmarks to github pages
        if: github.event_name == 'push'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: html
