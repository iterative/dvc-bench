name: pull request build
on: [pull_request]

env:
  DVC_TEST: "true"

jobs:
  verify:
    name: tests, styling and quick asv run
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2019]
        include:
          - os: windows-2019
            cache_path: .dvc\cache
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - uses: actions/checkout@v2
      - name: install requirements
        run: pip install -r requirements.txt
      - name: check project styling
        if: matrix.os == 'ubuntu-18.04'
        run: pre-commit run --all-files
      - name: run tests
        run: python -m py.test
      - name: setup asv
        run: python write_asv_machine.py
      - name: cache data
        id: cache-data
        uses: actions/cache@v2
        with:
          path: ${{matrix.cache_path}}
          key: ${{ runner.os }}-data-${{ hashFiles('**/*.dvc') }}
      - name: download data
        if: steps.cache-data.outputs.cache-hit != 'true'
        run: dvc fetch data/cats_dogs.dvc
      - name: checkout data
        run: dvc checkout data/cats_dogs.dvc
      - name: quick asv build of HEAD
        run: asv run --quick
