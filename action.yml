name: 'DVC Benchmarks'
description: 'Run dvc benchmarks'
inputs:
  pytest_options:
    description: 'pytest options'
    default: ""
    required: false
runs:
  using: "composite"
  steps:
    - name: clone dvc-bench
      uses: actions/checkout@v4
      with:
        path: dvc-bench
        repository: iterative/dvc-bench
    - uses: hynek/setup-cached-uv@v2
    - name: install dvc-bench requirements
      working-directory: dvc-bench
      shell: bash
      run: uv pip install -r requirements.txt --system
    - name: checkout base dvc version
      uses: actions/checkout@v4
      with:
        path: dvc-bench/dvc
        ref: ${{ github.event.pull_request.base.sha }}
        fetch-depth: 0
    - name: install base dvc version
      shell: bash
      working-directory: dvc-bench/dvc
      run: uv pip install '.[all,tests]' --system
    - name: run benchmarks for base version
      shell: bash
      working-directory: dvc-bench
      env:
        DVC_TEST: "true"
      run: |
        dvc --version
        pytest --pyargs dvc.testing.benchmarks --benchmark-autosave ${{ inputs.pytest_options }}
    - name: checkout PR dvc version
      uses: actions/checkout@v4
      with:
        path: dvc-bench/dvc
        fetch-depth: 0
    - name: install PR dvc version
      shell: bash
      working-directory: dvc-bench/dvc
      run: uv pip install '.[all,tests]' --system
    - name: run benchmarks for PR
      shell: bash
      working-directory: dvc-bench
      env:
        DVC_TEST: "true"
      run: |
        dvc --version
        PY_COLORS=1 pytest --pyargs dvc.testing.benchmarks --benchmark-compare --benchmark-compare-fail=median:5% --benchmark-group-by name ${{ inputs.pytest_options}}
