name: 'DVC Benchmarks'
description: 'Run dvc benchmarks'
inputs:
  pytest_options:
    description: 'pytest options'
    default: ""
    required: false
  python-version:
    default: "3.10"
    description: "python version to install"
    required: false

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3
      with:
        path: pr
        fetch-depth: 0

    - uses: actions/checkout@v3
      with:
        path: base
        ref: "${{ github.event.pull_request.base.sha }}"
        fetch-depth: 0

    - uses: actions/setup-python@v4
      with:
          python-version: "${{ inputs.python-version }}"
          cache: pip
          cache-dependency-path: |
            ${{ github.action_path }}/requirements.txt
            base/pyproject.toml

    - run: pip install --upgrade pip wheel
      shell: bash

    - name: install dvc-bench requirements
      run: pip install -r ${{ github.action_path }}/requirements.txt
      shell: bash

    - name: install dvc from base branch
      working-directory: base
      shell: bash
      run: pip install . && dvc --version

    - name: run benchmarks for base
      shell: bash
      working-directory: "${{ github.action_path }}"
      env:
        DVC_TEST: "true"
      run: pytest --benchmark-autosave ${{ inputs.pytest_options }} tests/benchmarks

    - name: install dvc from pull request
      working-directory: pr
      shell: bash
      run: pip install . && dvc --version

    - name: run benchmarks for PR
      shell: bash
      working-directory: "${{ github.action_path }}"
      env:
        DVC_TEST: "true"
        PY_COLORS: "1"
      run: >
        pytest --benchmark-compare
        --benchmark-compare-fail=median:5%
        --benchmark-group-by name
        ${{ inputs.pytest_options}} tests/benchmarks
